{"version":3,"sources":["components/video_item/video_item.module.css","app.module.css","components/video_list/video_list.module.css","components/video_view/video_view.module.css","components/search_header/search_header.jsx","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/video_view/video_view.jsx","app.jsx","index.js"],"names":["module","exports","SearchHeader","onSearch","inputRef","useRef","handleSearch","value","current","type","placeholder","ref","onKeyPress","event","key","onClick","console","log","VideoItem","video","snippet","display","onVideoClick","displayType","styles","subList","mainList","className","container","thumbnail","src","thumbnails","medium","url","alt","metadata","title","channel","channelTitle","VideoList","videos","map","id","videoView","frameBorder","allowFullScreen","description","App","useState","setVideos","selectedVideo","setSelectedVideo","useEffect","fetch","method","redirect","then","response","json","result","items","catch","error","query","item","videoId","content","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e42f0c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_item_container__15oji\",\"video\":\"video_item_video__37dg9\",\"thumbnail\":\"video_item_thumbnail__1w2AL\",\"metadata\":\"video_item_metadata__N-I6a\",\"title\":\"video_item_title__3lIaP\",\"channel\":\"video_item_channel__1dZ3U\",\"mainList\":\"video_item_mainList__3N8fM\",\"subList\":\"video_item_subList__16E_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__cewju\",\"content\":\"app_content__ckDFI\",\"detail\":\"app_detail__Xmsnl\",\"list\":\"app_list__2we4s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videos\":\"video_list_videos__1VCw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_view_container__MySib\"};","import React, { useRef } from \"react\";\n// import styles from \"./search_header.module.css\";\n\nconst SearchHeader = ({ onSearch }) => {\n  const inputRef = useRef();\n\n  const handleSearch = () => {\n    const value = inputRef.current.value;\n    onSearch(value);\n  };\n\n  const onKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n  const onClick = () => {\n    console.log(\"click\");\n    handleSearch();\n  };\n\n  return (\n    <header>\n      <input\n        type=\"text\"\n        placeholder=\"검색\"\n        ref={inputRef}\n        onKeyPress={onKeyPress}\n      />\n      <button type=\"button\" onClick={onClick}>\n        검색\n      </button>\n    </header>\n  );\n};\n\nexport default SearchHeader;\n","import React from \"react\";\nimport styles from \"./video_item.module.css\";\n\nconst VideoItem = ({ video, video: { snippet }, display, onVideoClick }) => {\n  const displayType = display === \"subList\" ? styles.subList : styles.mainList;\n\n  return (\n    <li\n      className={`${styles.container} ${displayType}`}\n      onClick={() => onVideoClick(video)}\n    >\n      <div className={styles.video}>\n        <img\n          className={styles.thumbnail}\n          src={snippet.thumbnails.medium.url}\n          alt=\"video thumbnail\"\n        />\n        <div className={styles.metadata}>\n          <p className={styles.title}>{snippet.title}</p>\n          <p className={styles.channel}>{snippet.channelTitle}</p>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default VideoItem;\n","import React from \"react\";\nimport VideoItem from \"../video_item/video_item\";\nimport styles from \"./video_list.module.css\";\n\nconst VideoList = ({ videos, display, onVideoClick }) => {\n  return (\n    <ul className={styles.videos}>\n      {videos.map(video => (\n        <VideoItem\n          key={video.id}\n          video={video}\n          display={display}\n          onVideoClick={onVideoClick}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default VideoList;\n","import React from \"react\";\nimport styles from \"./video_view.module.css\";\n\nconst videoView = ({ video, video: { snippet } }) => {\n  console.log(snippet);\n  return (\n    <div className={styles.container}>\n      <iframe\n        src={`https://www.youtube.com/embed/${video.id}`}\n        title=\"YouTube video player\"\n        frameBorder=\"0\"\n        // allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n      <h2>{snippet.title}</h2>\n      <h3>{snippet.channelTitle}</h3>\n      <pre>{snippet.description}</pre>\n    </div>\n  );\n};\n\nexport default videoView;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./app.module.css\";\nimport SearchHeader from \"./components/search_header/search_header\";\nimport VideoList from \"./components/video_list/video_list\";\nimport VideoView from \"./components/video_view/video_view\";\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  // eslint-disable-next-line\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const selectVideo = video => {\n    setSelectedVideo(video);\n  };\n\n  // [] : 마운트 될 때 한번만 실행\n  // [videos] : 해당 데이터가 바뀔 때 실행\n  useEffect(() => {\n    const requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n\n    fetch(\n      \"https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=30&regionCode=KR&key=AIzaSyBuJwnYIP2nG7wfg5j2u5Wc8E9qQoIVRGM\",\n      requestOptions\n    )\n      .then(response => response.json())\n      .then(result => {\n        setVideos(result.items);\n      })\n      .catch(error => console.log(\"error\", error));\n  }, []);\n\n  const search = query => {\n    setSelectedVideo(null);\n    const requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n\n    fetch(\n      `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${query}&type=video&key=AIzaSyBuJwnYIP2nG7wfg5j2u5Wc8E9qQoIVRGM`,\n      requestOptions\n    )\n      .then(response => response.json())\n      .then(result => {\n        setVideos(result.items.map(item => ({ ...item, id: item.id.videoId })));\n      })\n      .catch(error => console.log(\"error\", error));\n  };\n\n  // return <VideoList videos={videos}/>;\n  return (\n    <>\n      <SearchHeader onSearch={search} />\n      <div className={styles.content}>\n        {selectedVideo && <VideoView video={selectedVideo} />}\n        <VideoList\n          videos={videos}\n          display={selectedVideo ? \"subList\" : \"mainList\"}\n          onVideoClick={selectVideo}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}